import React, { ReactElement, useState } from 'react';
import SettingsMenu from '@components/menus/SettingsMenu';
import ProtectedLayout from '@layouts/ProtectedLayout';
import { NextPageWithLayout } from '@pages/_app';
import { changeUserPasswordMutation } from '@services/graphql/queries/user';
import { RootState } from '@store/configure-store';
import { Button, Col, Form, Input, Row, message, Checkbox, Switch } from 'antd';
import Head from 'next/head';
import { useSelector } from 'react-redux';
import { useMutation } from 'urql';
import styles from './SecurityPage.module.less';

const SecurityPage: NextPageWithLayout = () => {
	const [form] = Form.useForm();
	const userId = useSelector((state: RootState) => state.user.id);
	const [, changeUserPassword] = useMutation(changeUserPasswordMutation);
	const [isOTP, setIsOTP] = useState(false);

	const handleFinish = async () => {
		const { useOTP, oldPassword, newPassword, confirmPassword } = form.getFieldsValue();
		debugger;
		if (newPassword !== confirmPassword) {
			message.error('Password mismatch!');
			return;
		}

		try {
			const { error } = await changeUserPassword({
				useOTP,
				oldPassword,
				newPassword,
				confirmPassword,
			});

			if (error) {
				message.error(error.message);
				return;
			}

			message.success('Password changed!');

			form.resetFields();
		} catch (error: any) {
			message.error(error.message);
		}
	};

	return (
		<>
			<Head>
				<title>Security</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<SettingsMenu selectedItem="security" />
			<Row>
				<Col flex="1" className={styles.content}>
					<h3>Security settings</h3>
					<Form className={styles.form} form={form} layout="vertical" onFinish={handleFinish} requiredMark={false}>
						<Form.Item name="useOTP" label="Use one time password (OTP)" valuePropName="checked">
							{/* <Checkbox onChange={(el) => setIsOTP(el.target.checked)}>Use one time password (OTP)</Checkbox> */}
							<Switch onChange={(value) => setIsOTP(value)} />
						</Form.Item>
						{!isOTP && (
							<>
								<Form.Item name="oldPassword" rules={[{ required: true, message: 'Please input an old password!' }]}>
									<Input.Password placeholder="Old password" />
								</Form.Item>
								<Form.Item name="newPassword" rules={[{ required: true, message: 'Please input a new password!' }]}>
									<Input.Password placeholder="New password" />
								</Form.Item>
								<Form.Item name="confirmPassword" rules={[{ required: true, message: 'Please confirm the password!' }]}>
									<Input.Password placeholder="Confirm password" />
								</Form.Item>
							</>
						)}
						<Form.Item>
							<Button type="primary" htmlType="submit" style={{ marginTop: '15px' }}>
								Change password
							</Button>
						</Form.Item>
					</Form>
				</Col>
			</Row>
		</>
	);
};

SecurityPage.getLayout = (page: ReactElement) => <ProtectedLayout title="Profile">{page}</ProtectedLayout>;

export default SecurityPage;
